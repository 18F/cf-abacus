'use strict';

// Provides access to service metering and aggregation configuration.

var _ = require('underscore');
var map = _.map;
var pairs = _.pairs;

var schemas = require('abacus-metering-schemas');

var config = require('..');

describe('abacus-service-config', function () {
  it('returns service config for a service', function () {
    expect(config('storage')).to.deep.equal(require('../services/storage.js'));
    expect(config('analytics')).to.deep.equal(require('../services/analytics.js'));
  });

  it('validates all service configurations', function () {
    map(pairs(config.all()), function (s) {
      console.log('    validating', s[0], 'service');
      expect(schemas.serviceDefinition.validate(s[1])).to.deep.equal(s[1]);
      console.log('        validated', s[0], 'service');
    });
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0L3Rlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOzs7O0FBSWIsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ2hDLElBQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUM7QUFDbEIsSUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQzs7QUFFdEIsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUM7O0FBRW5ELElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFN0IsUUFBUSxDQUFDLHVCQUF1QixFQUFFLFlBQU07QUFDdEMsSUFBRSxDQUFDLHNDQUFzQyxFQUFFLFlBQU07QUFDL0MsVUFBTSxDQUNKLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7QUFDdEUsVUFBTSxDQUNKLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLENBQUM7R0FDM0UsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxzQ0FBc0MsRUFBRSxZQUFNO0FBQy9DLE9BQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsVUFBQyxDQUFDLEVBQUs7QUFDOUIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDL0MsWUFBTSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRSxhQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztLQUNuRCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gUHJvdmlkZXMgYWNjZXNzIHRvIHNlcnZpY2UgbWV0ZXJpbmcgYW5kIGFnZ3JlZ2F0aW9uIGNvbmZpZ3VyYXRpb24uXG5cbmNvbnN0IF8gPSByZXF1aXJlKCd1bmRlcnNjb3JlJyk7XG5jb25zdCBtYXAgPSBfLm1hcDtcbmNvbnN0IHBhaXJzID0gXy5wYWlycztcblxuY29uc3Qgc2NoZW1hcyA9IHJlcXVpcmUoJ2FiYWN1cy1tZXRlcmluZy1zY2hlbWFzJyk7XG5cbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoJy4uJyk7XG5cbmRlc2NyaWJlKCdhYmFjdXMtc2VydmljZS1jb25maWcnLCAoKSA9PiB7XG4gIGl0KCdyZXR1cm5zIHNlcnZpY2UgY29uZmlnIGZvciBhIHNlcnZpY2UnLCAoKSA9PiB7XG4gICAgZXhwZWN0KFxuICAgICAgY29uZmlnKCdzdG9yYWdlJykpLnRvLmRlZXAuZXF1YWwocmVxdWlyZSgnLi4vc2VydmljZXMvc3RvcmFnZS5qcycpKTtcbiAgICBleHBlY3QoXG4gICAgICBjb25maWcoJ2FuYWx5dGljcycpKS50by5kZWVwLmVxdWFsKHJlcXVpcmUoJy4uL3NlcnZpY2VzL2FuYWx5dGljcy5qcycpKTtcbiAgfSk7XG5cbiAgaXQoJ3ZhbGlkYXRlcyBhbGwgc2VydmljZSBjb25maWd1cmF0aW9ucycsICgpID0+IHtcbiAgICBtYXAocGFpcnMoY29uZmlnLmFsbCgpKSwgKHMpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCcgICAgdmFsaWRhdGluZycsIHNbMF0sICdzZXJ2aWNlJyk7XG4gICAgICBleHBlY3Qoc2NoZW1hcy5zZXJ2aWNlRGVmaW5pdGlvbi52YWxpZGF0ZShzWzFdKSkudG8uZGVlcC5lcXVhbChzWzFdKTtcbiAgICAgIGNvbnNvbGUubG9nKCcgICAgICAgIHZhbGlkYXRlZCcsIHNbMF0sICdzZXJ2aWNlJyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG5cbiJdfQ==